# Generated by Django 3.1.7 on 2021-03-16 00:38

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Agency",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "source_id",
                    models.CharField(
                        db_index=True, max_length=64, verbose_name="source ID"
                    ),
                ),
                ("name", models.CharField(max_length=64, verbose_name="name")),
                ("url", models.URLField(verbose_name="URL")),
                (
                    "timezone",
                    models.CharField(
                        help_text="tz database time zone",
                        max_length=64,
                        verbose_name="timezone",
                    ),
                ),
                (
                    "lang",
                    models.CharField(
                        blank=True,
                        help_text="IETF BCP 47 language code",
                        max_length=16,
                        verbose_name="language",
                    ),
                ),
                (
                    "phone",
                    models.CharField(blank=True, max_length=64, verbose_name="phone"),
                ),
                ("fare_url", models.URLField(blank=True, verbose_name="fare URL")),
                (
                    "email",
                    models.EmailField(blank=True, max_length=254, verbose_name="email"),
                ),
            ],
            options={
                "verbose_name": "agency",
                "verbose_name_plural": "agencies",
                "abstract": False,
                "default_related_name": "agencies",
            },
        ),
        migrations.CreateModel(
            name="Calendar",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "source_id",
                    models.CharField(
                        db_index=True, max_length=64, verbose_name="source ID"
                    ),
                ),
                (
                    "monday",
                    models.PositiveSmallIntegerField(
                        choices=[(0, "Not available"), (1, "Available")],
                        verbose_name="monday",
                    ),
                ),
                (
                    "tuesday",
                    models.PositiveSmallIntegerField(
                        choices=[(0, "Not available"), (1, "Available")],
                        verbose_name="Tuesday",
                    ),
                ),
                (
                    "wednesday",
                    models.PositiveSmallIntegerField(
                        choices=[(0, "Not available"), (1, "Available")],
                        verbose_name="Wednesday",
                    ),
                ),
                (
                    "thursday",
                    models.PositiveSmallIntegerField(
                        choices=[(0, "Not available"), (1, "Available")],
                        verbose_name="Thursday",
                    ),
                ),
                (
                    "friday",
                    models.PositiveSmallIntegerField(
                        choices=[(0, "Not available"), (1, "Available")],
                        verbose_name="Friday",
                    ),
                ),
                (
                    "saturday",
                    models.PositiveSmallIntegerField(
                        choices=[(0, "Not available"), (1, "Available")],
                        verbose_name="Saturday",
                    ),
                ),
                (
                    "sunday",
                    models.PositiveSmallIntegerField(
                        choices=[(0, "Not available"), (1, "Available")],
                        verbose_name="Sunday",
                    ),
                ),
                ("start_date", models.DateField(verbose_name="start date")),
                ("end_date", models.DateField(verbose_name="end date")),
            ],
            options={
                "verbose_name": "calendar",
                "verbose_name_plural": "calendars",
                "abstract": False,
                "default_related_name": "calendars",
            },
        ),
        migrations.CreateModel(
            name="Fare",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "source_id",
                    models.CharField(
                        db_index=True, max_length=64, verbose_name="source ID"
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="price"
                    ),
                ),
                (
                    "currency_type",
                    models.CharField(
                        help_text="ISO 4217 alphabetical currency code", max_length=3
                    ),
                ),
                (
                    "payment_method",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Fare is paid on board"),
                            (1, "Fare must be paid before boarding"),
                        ],
                        verbose_name="payment method",
                    ),
                ),
                (
                    "transfers",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (None, "Unlimited transfers are permitted"),
                            (0, "No transfers permitted on this fare"),
                            (1, "Passenger may transfer once"),
                            (2, "Passenger may transfer twice"),
                        ],
                        null=True,
                        verbose_name="transfers",
                    ),
                ),
                (
                    "agency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fares",
                        to="gtfs.agency",
                        verbose_name="agency",
                    ),
                ),
            ],
            options={
                "verbose_name": "fare",
                "verbose_name_plural": "fares",
                "abstract": False,
                "default_related_name": "fares",
            },
        ),
        migrations.CreateModel(
            name="Feed",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                ("name", models.CharField(max_length=255, verbose_name="name")),
            ],
            options={
                "verbose_name": "feed",
                "verbose_name_plural": "feeds",
            },
        ),
        migrations.CreateModel(
            name="Route",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "source_id",
                    models.CharField(
                        db_index=True, max_length=64, verbose_name="source ID"
                    ),
                ),
                (
                    "short_name",
                    models.CharField(
                        blank=True, max_length=32, verbose_name="short name"
                    ),
                ),
                (
                    "long_name",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="long name"
                    ),
                ),
                ("desc", models.TextField(blank=True, verbose_name="description")),
                (
                    "type",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Tram"),
                            (1, "Subway"),
                            (2, "Rail"),
                            (3, "Bus"),
                            (4, "Ferry"),
                            (5, "Cable tram"),
                            (6, "Aerial lift"),
                            (7, "Funicular"),
                            (11, "Trolleybus"),
                            (12, "Monorail"),
                        ],
                        verbose_name="type",
                    ),
                ),
                ("url", models.URLField(blank=True, verbose_name="URL")),
                (
                    "agency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="routes",
                        to="gtfs.agency",
                        verbose_name="agency",
                    ),
                ),
                (
                    "feed",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="routes",
                        to="gtfs.feed",
                        verbose_name="feed",
                    ),
                ),
            ],
            options={
                "verbose_name": "route",
                "verbose_name_plural": "routes",
                "abstract": False,
                "default_related_name": "routes",
            },
        ),
        migrations.CreateModel(
            name="Stop",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "source_id",
                    models.CharField(
                        db_index=True, max_length=64, verbose_name="source ID"
                    ),
                ),
                (
                    "name",
                    models.CharField(blank=True, max_length=255, verbose_name="name"),
                ),
                (
                    "code",
                    models.CharField(blank=True, max_length=255, verbose_name="code"),
                ),
                ("desc", models.TextField(blank=True, verbose_name="description")),
                (
                    "point",
                    django.contrib.gis.db.models.fields.PointField(
                        srid=4326, verbose_name="point"
                    ),
                ),
                (
                    "feed",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stops",
                        to="gtfs.feed",
                        verbose_name="feed",
                    ),
                ),
            ],
            options={
                "verbose_name": "stop",
                "verbose_name_plural": "stops",
                "abstract": False,
                "default_related_name": "stops",
            },
        ),
        migrations.CreateModel(
            name="Trip",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "source_id",
                    models.CharField(
                        db_index=True, max_length=64, verbose_name="source ID"
                    ),
                ),
                (
                    "headsign",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="headsign"
                    ),
                ),
                (
                    "short_name",
                    models.CharField(
                        blank=True, max_length=64, verbose_name="short name"
                    ),
                ),
                (
                    "calendar",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trips",
                        to="gtfs.calendar",
                        verbose_name="calendar",
                    ),
                ),
                (
                    "feed",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trips",
                        to="gtfs.feed",
                        verbose_name="feed",
                    ),
                ),
                (
                    "route",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trips",
                        to="gtfs.route",
                        verbose_name="route",
                    ),
                ),
            ],
            options={
                "verbose_name": "trip",
                "verbose_name_plural": "trips",
                "default_related_name": "trips",
            },
        ),
        migrations.CreateModel(
            name="StopTime",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "source_id",
                    models.CharField(
                        db_index=True, max_length=64, verbose_name="source ID"
                    ),
                ),
                (
                    "arrival_time",
                    models.TimeField(
                        blank=True, null=True, verbose_name="arrival time"
                    ),
                ),
                (
                    "departure_time",
                    models.TimeField(
                        blank=True, null=True, verbose_name="departure time"
                    ),
                ),
                (
                    "stop_sequence",
                    models.PositiveIntegerField(verbose_name="stop sequence"),
                ),
                (
                    "feed",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stop_times",
                        to="gtfs.feed",
                        verbose_name="feed",
                    ),
                ),
                (
                    "stop",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stop_times",
                        to="gtfs.stop",
                    ),
                ),
                (
                    "trip",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stop_times",
                        to="gtfs.trip",
                        verbose_name="trip",
                    ),
                ),
            ],
            options={
                "verbose_name": "stop times",
                "verbose_name_plural": "stop times",
                "abstract": False,
                "default_related_name": "stop_times",
            },
        ),
        migrations.CreateModel(
            name="FareRule",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "source_id",
                    models.CharField(
                        db_index=True, max_length=64, verbose_name="source ID"
                    ),
                ),
                (
                    "fare",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fare_rules",
                        to="gtfs.fare",
                        verbose_name="fare",
                    ),
                ),
                (
                    "feed",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fare_rules",
                        to="gtfs.feed",
                        verbose_name="feed",
                    ),
                ),
                (
                    "route",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fare_rules",
                        to="gtfs.route",
                        verbose_name="route",
                    ),
                ),
            ],
            options={
                "verbose_name": "fare rule",
                "verbose_name_plural": "fare rules",
                "default_related_name": "fare_rules",
            },
        ),
        migrations.AddField(
            model_name="fare",
            name="feed",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="fares",
                to="gtfs.feed",
                verbose_name="feed",
            ),
        ),
        migrations.CreateModel(
            name="CalendarDate",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "source_id",
                    models.CharField(
                        db_index=True, max_length=64, verbose_name="source ID"
                    ),
                ),
                ("date", models.DateField(verbose_name="date")),
                (
                    "exception_type",
                    models.PositiveSmallIntegerField(
                        choices=[(0, "Added"), (1, "Removed")],
                        verbose_name="exception type",
                    ),
                ),
                (
                    "calendar",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="calendar_dates",
                        to="gtfs.calendar",
                    ),
                ),
                (
                    "feed",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="calendar_dates",
                        to="gtfs.feed",
                        verbose_name="feed",
                    ),
                ),
            ],
            options={
                "verbose_name": "calendar date",
                "verbose_name_plural": "calendar dates",
                "abstract": False,
                "default_related_name": "calendar_dates",
            },
        ),
        migrations.AddField(
            model_name="calendar",
            name="feed",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="calendars",
                to="gtfs.feed",
                verbose_name="feed",
            ),
        ),
        migrations.AddField(
            model_name="agency",
            name="feed",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="agencies",
                to="gtfs.feed",
                verbose_name="feed",
            ),
        ),
        migrations.AddConstraint(
            model_name="stoptime",
            constraint=models.UniqueConstraint(
                fields=("trip", "stop_sequence"), name="unique_stop_sequence"
            ),
        ),
        migrations.AddConstraint(
            model_name="stop",
            constraint=models.UniqueConstraint(
                fields=("feed", "source_id"), name="unique_feed_gtfs_stop"
            ),
        ),
        migrations.AddConstraint(
            model_name="route",
            constraint=models.UniqueConstraint(
                fields=("feed", "source_id"), name="unique_feed_gtfs_route"
            ),
        ),
        migrations.AddConstraint(
            model_name="fare",
            constraint=models.UniqueConstraint(
                fields=("feed", "source_id"), name="unique_feed_gtfs_fare"
            ),
        ),
        migrations.AddConstraint(
            model_name="calendardate",
            constraint=models.UniqueConstraint(
                fields=("calendar", "date"), name="unique_calendar_date"
            ),
        ),
        migrations.AddConstraint(
            model_name="calendar",
            constraint=models.UniqueConstraint(
                fields=("feed", "source_id"), name="unique_feed_gtfs_calendar"
            ),
        ),
        migrations.AddConstraint(
            model_name="agency",
            constraint=models.UniqueConstraint(
                fields=("feed", "source_id"), name="unique_feed_gtfs_agency"
            ),
        ),
    ]
